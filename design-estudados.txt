1) Strategy
- aplicar tipos de imposto para o orçamento
-> A ideia é passar uma instancia da classe de imposto( a estrategia ) e quem recebeu chama o metodo em comum entre eles

O Python usa o conceito de DuckType para classes e metodos que fazem +- a mesma coisa

* Aqui é ideal usar algum tipo de interface pois todas as outras classe devem implementar o mesmo metodo
O java conta com uma classe do tipo interface, o python nao tem isso
Poderia ser usado classe e metodo abstrato

1.1) @property
- para chamar um atributo do objeto como uma propridade, ex orcamento.valor
PS.: NÃO É VARIAVEL DE CLASSE POIS PRECISO INSTANCIAR

** NÂO DEVE ter condição dentro de uma instancia  para chamar outras possiveis condições **

2) Chain of Responsibility
- Tentar aplicar uma cadeia de desconto
-> Serie de itens a serem verificados dado um condição um após o outro
   o primeiro, caso nao atenda, sabe quem chamar
Passa pelo construtor a proxima regra a ser chamada caso nao atenda

** Preciso de uma condição dentro de uma corrente para verificar se ela vai ser atendida ou nao **

3) Código parecido e o Template Method
Quando a Estrutura do metodo / classe / função é semelhante podesse usar um template e quem precisar desse estrutura implementa desse template
EX: Aplicação de taxação maxima ou mínima. Não importa o tipo de imposto, se ele tem uma estrutura nesse estilo ele pode implementar do template method

Para usar uma Template Method é preciso usar Classe Abstrata para fazer um contrato forte entre quem usa esse template

4) Comportamentos compostos por outros comportamentos e o Decorator
Como calcular o ICMS sobre o ISS?
É ai que entra o Comportamento compostos por outros comportamentos
Combinar impostos sem criar novas classes

Quando uma classe recebe uma outra classe como paramentro, chamasse de composição e quando há uma composição de classes no mesmo tipo
EX: Imposto
Isso caracteriza Decorator
A diferença de Criar Decorator na mão é que é mais flexivél

O Python já tem o Decorator dele através de anotação. Porém não tem essa opção de não chamar

Podemos fazer ISS() ou ISS(ICMS) com o decorator deito na mão

Se fizemos o decorator do python onde o ISS recebe a anotação, sempre que chamar ISS() ele vem com as outras coisa que Decoramos nele

5)Estados que variam e o State:
O orçamento passa por alguns estados
